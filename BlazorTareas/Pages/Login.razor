@page "/"
@inject IJSRuntime JS
@layout LoginLayout
@inject NavigationManager Navigation
@inject HttpClient Http

<PageTitle>Login</PageTitle>

<div class="login-container">
    <h3>Iniciar Sesión</h3>
    <EditForm Model="@usuario" OnValidSubmit="@InicioSesion">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-6">
            
            <InputText id="usuario" placeholder="Nombre de usuario" class="form-control" @bind-Value="usuario.NombreUsuario" />
        </div>
        <div class="mb-6">
            
            <InputText id="clave" placeholder="Contraseña" class="form-control" @bind-Value="usuario.Clave" type="password" />
        </div>



      @*   <InputText @bind-Value="loginModel.Username" id="username" name="username" placeholder="Nombre de usuario" class="input" />
        <ValidationMessage For="@(() => loginModel.Username)" />

        <InputText @bind-Value="loginModel.Password" type="password" id="password" name="password" placeholder="Contraseña" class="input" />
        <ValidationMessage For="@(() => loginModel.Password)" /> *@
        <button type="submit" class="btn btn-primary">Iniciar Sesión</button>
    </EditForm>
</div>



@code {
    private Usuario usuario = new Usuario();

    private async Task InicioSesion()
    {
        try
        {
            if (string.IsNullOrWhiteSpace(usuario.NombreUsuario) || string.IsNullOrWhiteSpace(usuario.Clave))
            {
             await jsRuntime.InvokeVoidAsync("Swal.fire", "Atención", "No puede ingresar campos vacios", "error");
    
                return;
            }

            var response = await Http.PostAsJsonAsync("https://localhost:7001/usuario/Login", usuario);
            if (response.IsSuccessStatusCode)
            {
                Console.WriteLine("Inicio de sesión exitoso");
                Navigation.NavigateTo("/home", true);
            }
            else
            {
                var errorContent = await response.Content.ReadAsStringAsync();
                await ShowAlertError();

                Console.WriteLine($"Error al iniciar sesión: {errorContent}");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
    }

   

    [Inject]
    private IJSRuntime? jsRuntime { get; set; }

    private async Task ShowAlertError()
    {

        // Si prefieres usar SweetAlert2, puedes llamarlo desde JS
        await jsRuntime.InvokeVoidAsync("Swal.fire", "Atención", "Verifique sus credenciales, existe un error en la autenticación", "error");
    }

    public class Usuario
    {
        public int? Id { get; set; }
        public string? NombreUsuario { get; set; }
        public string? Clave { get; set; }
        public string? Nombres { get; set; }
    }
}


<style>
    body {
        background-color: #f5f5f5;
        font-family: Arial, sans-serif;
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        margin: 0;
        padding: 0;
    }

    .login-container {
        background-color: #fff;
        border-radius: 10px;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
        padding: 40px;
        max-width: 400px;
        width: 100%;
        text-align: center;
    }

    h3 {
        margin-bottom: 30px;
        color: #333;
        font-weight: bold;
    }

    .form-control {
        width: calc(100% - 10px);
        padding: 15px;
        margin-bottom: 20px;
        border: none;
        border-radius: 25px;
        background-color: #f5f5f5;
        box-sizing: border-box;
        outline: none;
    }

        .form-control:focus {
            background-color: #fff;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

    button {
        background-color: #ff6b6b;
        color: #fff;
        border: none;
        border-radius: 25px;
        padding: 15px 0;
        width: 100%;
        cursor: pointer;
        transition: background-color 0.3s;
        font-size: 16px;
        font-weight: bold;
    }

        button:hover {
            background-color: #ff4f4f;
        }

    .forgot-password {
        color: #666;
        text-decoration: none;
        font-size: 14px;
        margin-top: 20px;
        display: inline-block;
    }

        .forgot-password:hover {
            color: #333;
        }
</style>